import chalk from "chalk";
import dedent from 'dedent-js'
import { getIcon } from "../api-service/api.service.js";
import moment from 'moment-timezone';


const getLocalDateTime = (dt, timezone) => {
    
    const dateTime = new Date(dt * 1000 + timezone * 1000)
    
    const localDate = moment.tz(dateTime, "UTC").format("DD.MM.yyyy");
    const localTime = moment.tz(dateTime, "UTC").format("HH:MM");

    return {localDate, localTime}
    
}



const printError = (error) => {  
    console.log(`${chalk.bgRed( '–û–®–ò–ë–ö–ê' )}\n${error}`)
};

const printSuccess = (message) => {
    console.log(`${chalk.bgGreen( '–£–°–ü–ï–®–ù–û' )}\n${message}`)
};

const printHelp = () => {
     console.log(
        dedent`${chalk.bgCyan(' HELP ')}
        –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ : –≤—ã–≤–æ–¥ –ø–æ–≥–æ–¥—ã;
                    -s : [CITY...] –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–∞(-–æ–≤);
                    -h : –¥–ª—è –≤—ã–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞;
                    -t : [API_KEY] –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞;
                    -l : –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ (ext. ru)`
        )

};

const printWeather = (weather) => {
    const icon = getIcon(weather.weather[0].icon);
    const city = weather.name;
    const dateTime = getLocalDateTime(weather.dt, weather.timezone) 
    let desc = weather.weather[0].description.toString();
    desc = `${desc.charAt(0).toUpperCase()}${desc.slice(1)}`
    const temp = `${Math.round(weather.main.temp)}¬∞`;
    const maxTemp = `${Math.round(weather.main.temp_max)}¬∞`;
    const minTemp = `${Math.round(weather.main.temp_min)}¬∞`;
    const humidity = `üíß ${weather.main.humidity}%`;
    const wind = `üö© ${weather.wind.speed} –º/—Å`

   
    
    
    console.log(
        dedent`
         ${city}. ${icon}

         –ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ - ${dateTime.localDate}, ${dateTime.localTime}:
         –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è ${temp}. ${desc}.

         ${chalk.bgRedBright(maxTemp)} ${chalk.bgBlueBright(minTemp)} | ${humidity} | ${wind}
         ________________________________________________________________________________________

         `)
}

export {printError, printSuccess, printHelp, printWeather}